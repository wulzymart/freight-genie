/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as unauthenticatedLoginImport } from './routes/(unauthenticated)/login'
import { Route as AuthenticatedRoutesIndexImport } from './routes/_authenticated/routes/index'
import { Route as AuthenticatedStationsAddImport } from './routes/_authenticated/stations/add'
import { Route as AuthenticatedStaffAddImport } from './routes/_authenticated/staff/add'
import { Route as AuthenticatedSetupItemTypesImport } from './routes/_authenticated/setup/item-types'
import { Route as AuthenticatedSetupItemCategoriesImport } from './routes/_authenticated/setup/item-categories'
import { Route as AuthenticatedSetupConfigImport } from './routes/_authenticated/setup/config'
import { Route as AuthenticatedSetupAdditionalChargesImport } from './routes/_authenticated/setup/additional-charges'
import { Route as AuthenticatedRoutesAddImport } from './routes/_authenticated/routes/add'
import { Route as AuthenticatedOrdersNewImport } from './routes/_authenticated/orders/new'
import { Route as AuthenticatedCustomersAddImport } from './routes/_authenticated/customers/add'
import { Route as AuthenticatedUserSecurityIndexImport } from './routes/_authenticated/user/security/index'
import { Route as AuthenticatedUserSecurityFormsPinFormImport } from './routes/_authenticated/user/security/_forms/_pin-form'
import { Route as AuthenticatedUserSecurityFormsPasswordFormImport } from './routes/_authenticated/user/security/_forms/_password-form'

// Create Virtual Routes

const AuthenticatedUserSecurityFormsImport = createFileRoute(
  '/_authenticated/user/security/_forms',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const unauthenticatedLoginRoute = unauthenticatedLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoutesIndexRoute = AuthenticatedRoutesIndexImport.update({
  path: '/routes/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStationsAddRoute = AuthenticatedStationsAddImport.update({
  path: '/stations/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStaffAddRoute = AuthenticatedStaffAddImport.update({
  path: '/staff/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSetupItemTypesRoute =
  AuthenticatedSetupItemTypesImport.update({
    path: '/setup/item-types',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSetupItemCategoriesRoute =
  AuthenticatedSetupItemCategoriesImport.update({
    path: '/setup/item-categories',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSetupConfigRoute = AuthenticatedSetupConfigImport.update({
  path: '/setup/config',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSetupAdditionalChargesRoute =
  AuthenticatedSetupAdditionalChargesImport.update({
    path: '/setup/additional-charges',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedRoutesAddRoute = AuthenticatedRoutesAddImport.update({
  path: '/routes/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedOrdersNewRoute = AuthenticatedOrdersNewImport.update({
  path: '/orders/new',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCustomersAddRoute = AuthenticatedCustomersAddImport.update({
  path: '/customers/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUserSecurityFormsRoute =
  AuthenticatedUserSecurityFormsImport.update({
    id: '/user/security/_forms',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedUserSecurityIndexRoute =
  AuthenticatedUserSecurityIndexImport.update({
    path: '/user/security/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedUserSecurityFormsPinFormRoute =
  AuthenticatedUserSecurityFormsPinFormImport.update({
    id: '/_pin-form',
    getParentRoute: () => AuthenticatedUserSecurityFormsRoute,
  } as any)

const AuthenticatedUserSecurityFormsPasswordFormRoute =
  AuthenticatedUserSecurityFormsPasswordFormImport.update({
    id: '/_password-form',
    getParentRoute: () => AuthenticatedUserSecurityFormsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/(unauthenticated)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof unauthenticatedLoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/customers/add': {
      id: '/_authenticated/customers/add'
      path: '/customers/add'
      fullPath: '/customers/add'
      preLoaderRoute: typeof AuthenticatedCustomersAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/orders/new': {
      id: '/_authenticated/orders/new'
      path: '/orders/new'
      fullPath: '/orders/new'
      preLoaderRoute: typeof AuthenticatedOrdersNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/routes/add': {
      id: '/_authenticated/routes/add'
      path: '/routes/add'
      fullPath: '/routes/add'
      preLoaderRoute: typeof AuthenticatedRoutesAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/setup/additional-charges': {
      id: '/_authenticated/setup/additional-charges'
      path: '/setup/additional-charges'
      fullPath: '/setup/additional-charges'
      preLoaderRoute: typeof AuthenticatedSetupAdditionalChargesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/setup/config': {
      id: '/_authenticated/setup/config'
      path: '/setup/config'
      fullPath: '/setup/config'
      preLoaderRoute: typeof AuthenticatedSetupConfigImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/setup/item-categories': {
      id: '/_authenticated/setup/item-categories'
      path: '/setup/item-categories'
      fullPath: '/setup/item-categories'
      preLoaderRoute: typeof AuthenticatedSetupItemCategoriesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/setup/item-types': {
      id: '/_authenticated/setup/item-types'
      path: '/setup/item-types'
      fullPath: '/setup/item-types'
      preLoaderRoute: typeof AuthenticatedSetupItemTypesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/staff/add': {
      id: '/_authenticated/staff/add'
      path: '/staff/add'
      fullPath: '/staff/add'
      preLoaderRoute: typeof AuthenticatedStaffAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/stations/add': {
      id: '/_authenticated/stations/add'
      path: '/stations/add'
      fullPath: '/stations/add'
      preLoaderRoute: typeof AuthenticatedStationsAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/routes/': {
      id: '/_authenticated/routes/'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof AuthenticatedRoutesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/user/security/': {
      id: '/_authenticated/user/security/'
      path: '/user/security'
      fullPath: '/user/security'
      preLoaderRoute: typeof AuthenticatedUserSecurityIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/user/security/_forms': {
      id: '/_authenticated/user/security/_forms'
      path: '/user/security'
      fullPath: '/user/security'
      preLoaderRoute: typeof AuthenticatedUserSecurityFormsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/user/security/_forms/_password-form': {
      id: '/_authenticated/user/security/_forms/_password-form'
      path: '/user/security'
      fullPath: '/user/security'
      preLoaderRoute: typeof AuthenticatedUserSecurityFormsPasswordFormImport
      parentRoute: typeof AuthenticatedUserSecurityFormsRoute
    }
    '/_authenticated/user/security/_forms/_pin-form': {
      id: '/_authenticated/user/security/_forms/_pin-form'
      path: ''
      fullPath: '/user/security'
      preLoaderRoute: typeof AuthenticatedUserSecurityFormsPinFormImport
      parentRoute: typeof AuthenticatedUserSecurityFormsImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedUserSecurityFormsRouteChildren {
  AuthenticatedUserSecurityFormsPasswordFormRoute: typeof AuthenticatedUserSecurityFormsPasswordFormRoute
  AuthenticatedUserSecurityFormsPinFormRoute: typeof AuthenticatedUserSecurityFormsPinFormRoute
}

const AuthenticatedUserSecurityFormsRouteChildren: AuthenticatedUserSecurityFormsRouteChildren =
  {
    AuthenticatedUserSecurityFormsPasswordFormRoute:
      AuthenticatedUserSecurityFormsPasswordFormRoute,
    AuthenticatedUserSecurityFormsPinFormRoute:
      AuthenticatedUserSecurityFormsPinFormRoute,
  }

const AuthenticatedUserSecurityFormsRouteWithChildren =
  AuthenticatedUserSecurityFormsRoute._addFileChildren(
    AuthenticatedUserSecurityFormsRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedCustomersAddRoute: typeof AuthenticatedCustomersAddRoute
  AuthenticatedOrdersNewRoute: typeof AuthenticatedOrdersNewRoute
  AuthenticatedRoutesAddRoute: typeof AuthenticatedRoutesAddRoute
  AuthenticatedSetupAdditionalChargesRoute: typeof AuthenticatedSetupAdditionalChargesRoute
  AuthenticatedSetupConfigRoute: typeof AuthenticatedSetupConfigRoute
  AuthenticatedSetupItemCategoriesRoute: typeof AuthenticatedSetupItemCategoriesRoute
  AuthenticatedSetupItemTypesRoute: typeof AuthenticatedSetupItemTypesRoute
  AuthenticatedStaffAddRoute: typeof AuthenticatedStaffAddRoute
  AuthenticatedStationsAddRoute: typeof AuthenticatedStationsAddRoute
  AuthenticatedRoutesIndexRoute: typeof AuthenticatedRoutesIndexRoute
  AuthenticatedUserSecurityIndexRoute: typeof AuthenticatedUserSecurityIndexRoute
  AuthenticatedUserSecurityFormsRoute: typeof AuthenticatedUserSecurityFormsRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedCustomersAddRoute: AuthenticatedCustomersAddRoute,
  AuthenticatedOrdersNewRoute: AuthenticatedOrdersNewRoute,
  AuthenticatedRoutesAddRoute: AuthenticatedRoutesAddRoute,
  AuthenticatedSetupAdditionalChargesRoute:
    AuthenticatedSetupAdditionalChargesRoute,
  AuthenticatedSetupConfigRoute: AuthenticatedSetupConfigRoute,
  AuthenticatedSetupItemCategoriesRoute: AuthenticatedSetupItemCategoriesRoute,
  AuthenticatedSetupItemTypesRoute: AuthenticatedSetupItemTypesRoute,
  AuthenticatedStaffAddRoute: AuthenticatedStaffAddRoute,
  AuthenticatedStationsAddRoute: AuthenticatedStationsAddRoute,
  AuthenticatedRoutesIndexRoute: AuthenticatedRoutesIndexRoute,
  AuthenticatedUserSecurityIndexRoute: AuthenticatedUserSecurityIndexRoute,
  AuthenticatedUserSecurityFormsRoute:
    AuthenticatedUserSecurityFormsRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof unauthenticatedLoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/customers/add': typeof AuthenticatedCustomersAddRoute
  '/orders/new': typeof AuthenticatedOrdersNewRoute
  '/routes/add': typeof AuthenticatedRoutesAddRoute
  '/setup/additional-charges': typeof AuthenticatedSetupAdditionalChargesRoute
  '/setup/config': typeof AuthenticatedSetupConfigRoute
  '/setup/item-categories': typeof AuthenticatedSetupItemCategoriesRoute
  '/setup/item-types': typeof AuthenticatedSetupItemTypesRoute
  '/staff/add': typeof AuthenticatedStaffAddRoute
  '/stations/add': typeof AuthenticatedStationsAddRoute
  '/routes': typeof AuthenticatedRoutesIndexRoute
  '/user/security': typeof AuthenticatedUserSecurityFormsPinFormRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof unauthenticatedLoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/customers/add': typeof AuthenticatedCustomersAddRoute
  '/orders/new': typeof AuthenticatedOrdersNewRoute
  '/routes/add': typeof AuthenticatedRoutesAddRoute
  '/setup/additional-charges': typeof AuthenticatedSetupAdditionalChargesRoute
  '/setup/config': typeof AuthenticatedSetupConfigRoute
  '/setup/item-categories': typeof AuthenticatedSetupItemCategoriesRoute
  '/setup/item-types': typeof AuthenticatedSetupItemTypesRoute
  '/staff/add': typeof AuthenticatedStaffAddRoute
  '/stations/add': typeof AuthenticatedStationsAddRoute
  '/routes': typeof AuthenticatedRoutesIndexRoute
  '/user/security': typeof AuthenticatedUserSecurityFormsPinFormRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof unauthenticatedLoginRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/customers/add': typeof AuthenticatedCustomersAddRoute
  '/_authenticated/orders/new': typeof AuthenticatedOrdersNewRoute
  '/_authenticated/routes/add': typeof AuthenticatedRoutesAddRoute
  '/_authenticated/setup/additional-charges': typeof AuthenticatedSetupAdditionalChargesRoute
  '/_authenticated/setup/config': typeof AuthenticatedSetupConfigRoute
  '/_authenticated/setup/item-categories': typeof AuthenticatedSetupItemCategoriesRoute
  '/_authenticated/setup/item-types': typeof AuthenticatedSetupItemTypesRoute
  '/_authenticated/staff/add': typeof AuthenticatedStaffAddRoute
  '/_authenticated/stations/add': typeof AuthenticatedStationsAddRoute
  '/_authenticated/routes/': typeof AuthenticatedRoutesIndexRoute
  '/_authenticated/user/security/': typeof AuthenticatedUserSecurityIndexRoute
  '/_authenticated/user/security/_forms': typeof AuthenticatedUserSecurityFormsRouteWithChildren
  '/_authenticated/user/security/_forms/_password-form': typeof AuthenticatedUserSecurityFormsPasswordFormRoute
  '/_authenticated/user/security/_forms/_pin-form': typeof AuthenticatedUserSecurityFormsPinFormRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/customers/add'
    | '/orders/new'
    | '/routes/add'
    | '/setup/additional-charges'
    | '/setup/config'
    | '/setup/item-categories'
    | '/setup/item-types'
    | '/staff/add'
    | '/stations/add'
    | '/routes'
    | '/user/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/customers/add'
    | '/orders/new'
    | '/routes/add'
    | '/setup/additional-charges'
    | '/setup/config'
    | '/setup/item-categories'
    | '/setup/item-types'
    | '/staff/add'
    | '/stations/add'
    | '/routes'
    | '/user/security'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/dashboard'
    | '/_authenticated/customers/add'
    | '/_authenticated/orders/new'
    | '/_authenticated/routes/add'
    | '/_authenticated/setup/additional-charges'
    | '/_authenticated/setup/config'
    | '/_authenticated/setup/item-categories'
    | '/_authenticated/setup/item-types'
    | '/_authenticated/staff/add'
    | '/_authenticated/stations/add'
    | '/_authenticated/routes/'
    | '/_authenticated/user/security/'
    | '/_authenticated/user/security/_forms'
    | '/_authenticated/user/security/_forms/_password-form'
    | '/_authenticated/user/security/_forms/_pin-form'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  unauthenticatedLoginRoute: typeof unauthenticatedLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  unauthenticatedLoginRoute: unauthenticatedLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/customers/add",
        "/_authenticated/orders/new",
        "/_authenticated/routes/add",
        "/_authenticated/setup/additional-charges",
        "/_authenticated/setup/config",
        "/_authenticated/setup/item-categories",
        "/_authenticated/setup/item-types",
        "/_authenticated/staff/add",
        "/_authenticated/stations/add",
        "/_authenticated/routes/",
        "/_authenticated/user/security/",
        "/_authenticated/user/security/_forms"
      ]
    },
    "/login": {
      "filePath": "(unauthenticated)/login.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers/add": {
      "filePath": "_authenticated/customers/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orders/new": {
      "filePath": "_authenticated/orders/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/routes/add": {
      "filePath": "_authenticated/routes/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/setup/additional-charges": {
      "filePath": "_authenticated/setup/additional-charges.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/setup/config": {
      "filePath": "_authenticated/setup/config.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/setup/item-categories": {
      "filePath": "_authenticated/setup/item-categories.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/setup/item-types": {
      "filePath": "_authenticated/setup/item-types.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/staff/add": {
      "filePath": "_authenticated/staff/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/stations/add": {
      "filePath": "_authenticated/stations/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/routes/": {
      "filePath": "_authenticated/routes/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/security/": {
      "filePath": "_authenticated/user/security/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/security/_forms": {
      "filePath": "_authenticated/user/security/_forms",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/user/security/_forms/_password-form",
        "/_authenticated/user/security/_forms/_pin-form"
      ]
    },
    "/_authenticated/user/security/_forms/_password-form": {
      "filePath": "_authenticated/user/security/_forms/_password-form.tsx",
      "parent": "/_authenticated/user/security/_forms"
    },
    "/_authenticated/user/security/_forms/_pin-form": {
      "filePath": "_authenticated/user/security/_forms/_pin-form.tsx",
      "parent": "/_authenticated/user/security/_forms"
    }
  }
}
ROUTE_MANIFEST_END */
